# -*- coding: utf-8 -*-
"""eda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XHGm-MQoGYM6X2vFy0KSW6pUqqT44acb

### **Importing File**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

data = pd.read_csv('/content/preprocessed_election.csv')
data.head()

"""### **Data Wrangling**"""

#To identify how many rows and columns our dataset has
data.shape

#identifying the datatype of each column
data.dtypes

#to see the number of parties that participated
data['Party'].nunique()

# Identify the top 5 parties based on the total votes they received in the dataset
top_5_parties_votes = data.groupby('Party')['Votes'].sum().sort_values(ascending=False).head(5)
top_5_parties_votes

#Winning Margins by Constituency
winning_margin_by_constituency = data.groupby(['Constituency_Name', 'Party'])['Margin_Percentage'].mean().reset_index().sort_values(by='Margin_Percentage', ascending=False).head(5)
winning_margin_by_constituency

#Most Competitive Election Years
competitive_years = data.groupby('Year')['Margin_Percentage'].mean().reset_index().sort_values(by=['Margin_Percentage'], ascending=False).head(5)
competitive_years

#Displays the average age of each candidate in every party
average_candidate_age_party = data.groupby('Party')['Age'].mean().reset_index()
print("Average Candidate Age by Party:\n", average_candidate_age_party)

#Top performing party in each constituency
top_parties_by_constituency_type = data.groupby(['Constituency_Type', 'Party'])['Vote_Share_Percentage'].mean().unstack().fillna(0)
print("Top Performing Parties by Constituency Type:\n", top_parties_by_constituency_type)

"""### **EDA**"""

fig = px.histogram(data, x='Age', nbins=20, title="Distribution of Age of Candidates", color_discrete_sequence=["#6abcb0"])
fig.update_layout(xaxis_title="Age", yaxis_title="Frequency")
fig.show()

"""The age distribution shows a peak in the middle-age group, indicating that most candidates are likely in their 40s and 50s, with fewer young and elderly candidates. This may suggest that political participation is most common among middle-aged individuals."""

fig = px.histogram(data, x='Sex', title='Gender Distribution of Candidates',
                   color_discrete_sequence=['maroon'])
fig.update_layout(xaxis_title='Gender', yaxis_title='Number of Candidates')
fig.show()

"""The graph reveals a strong gender imbalance, with male candidates vastly outnumbering female candidates, indicating limited female political representation."""

plt.figure(figsize=(12,6))
sns.boxplot(data=data, x='Year', y='Vote_Share_Percentage', palette='cubehelix',hue='Year',legend=False)
plt.title("Distribution of Vote Shares Over the Years")
plt.xlabel("Year")
plt.xticks(rotation=45)
plt.ylabel("Vote Share (%)")
plt.grid(axis='y')
plt.show()

"""

1.   The wide range and variation in the box sizes suggest that the vote share distribution has been quite diverse across different years. This indicates that political dominance among parties has not been stable, with some years showing more competitive elections than others.
2.   The outliers in the plot could be due to a strong wave of public support or opposition for specific parties, potentially influenced by major political or social events.
3. The size of the box plots helps us identify the competition every year. If the box is short it indicates tough competition between parties and if the box is tall it indicates that the vote share was well-spread-out.

"""

# Calculating the average vote share for incumbents over time
incumbent_data = data[data['Incumbent'] == True]
avg_vote_share_by_year = incumbent_data.groupby('Year')['Vote_Share_Percentage'].mean().reset_index()

# Plot: Vote Share for Incumbents Over Time
plt.figure(figsize=(10, 6))
sns.lineplot(x='Year', y='Vote_Share_Percentage', data=avg_vote_share_by_year, marker='o', color='teal')
plt.title('Average Vote Share for Incumbents Over Time')
plt.xlabel('Year')
plt.ylabel('Average Vote Share Percentage')
plt.show()

"""The graph suggests that incumbent support in Maharashtra’s elections has been inconsistent.The significant highs and lows imply that incumbents’ success is closely tied to their performance and public perception during each term, with no guarantee of steady support over time."""

party_vote_share = data.groupby('Party')['Vote_Share_Percentage'].sum() #aggregating the vote share percentages for each party across all constituencies
top_10_parties = party_vote_share.nlargest(5)
fig = px.pie(values=top_10_parties, names=top_10_parties.index, title='Top 10 Parties by Vote Share Percentage')
fig.show()

"""The pie chart illustrates the top 10 parties by average vote share, with INC leading at 45.2%, highlighting INC's dominant position."""

sns.kdeplot(data=data, x='Vote_Share_Percentage', hue='Incumbent', fill=True)
plt.title("Vote Share Distribution by Incumbency Status")
plt.show()

"""The plot implies that incumbency may have an impact on vote share distribution, with incumbents having a slightly more even spread across vote shares, while non-incumbents cluster more toward the lower end. This could suggest that incumbents generally perform better than new challengers in terms of vote share.

This KDE plot is helpful to understand incumbency’s influence on vote shares and whether incumbents generally secure a more favorable position in terms of voter support.
"""

top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data=data[data['Party'].isin(top_parties)]#Retrieves the top 5 most frequent parties from the data.
plt.figure(figsize=(12, 6))
sns.violinplot(x='Party', y='Margin',hue='Party', data=filtered_data, palette="Set3", inner="quartile", legend=False)
plt.title('Vote Margins by Top 5 Parties')
plt.xlabel('Party')
plt.ylabel('Vote Margin')
plt.xticks(rotation=0)
plt.show()

"""
- **SHS** has the widest spread in vote margins, suggesting significant variability, with a few candidates winning by large margins.
- **INC** and **NCP** also have a relatively broad spread but are more concentrated around the lower margin values compared to SHS.
- **IND** has the narrowest distribution, indicating most independent candidates had smaller vote margins.
- **BJP** has a moderately spread distribution but with a slightly higher concentration in the middle range than IND.

This suggests that SHS had more variability in victory margins, while independent candidates tended to have smaller winning margins."""

# Making a new dataset with candidates who have secured 1st position
winners = data[data['Position'] == 1]
# counts the number of times each party has won, displays top 3
top_3_parties_by_wins = winners['Party'].value_counts().head(3)
# Filter the success rate data for only the top 3 parties
success_rate = data.groupby(['Party', 'Year'])['Position'].apply(lambda x: (x == 1).sum() / len(x)).reset_index() #total number od 1st postion/total number of party coounts
success_rate.columns = ['Party', 'Year', 'Success_Rate']
success_rate_top_3_parties = success_rate[success_rate['Party'].isin(top_3_parties_by_wins.index)]
# Plotting the success rate trend over time for the top 3 parties
plt.figure(figsize=(10, 6))
sns.lineplot(x='Year', y='Success_Rate', hue='Party', data=success_rate_top_3_parties, palette='plasma')
plt.title('Success Rate Trend Over Time for Top 3 Parties')
plt.xlabel('Year')
plt.ylabel('Success Rate')
plt.legend(title='Party')
plt.show()

"""

1.   BJP: The BJP's success rate has been on a decline since the early 2000s. It experienced a significant dip around 2005 and has been fluctuating since then.
2.   INC: The INC also shows a declining trend, with a steeper drop around the early 2010s. It has been relatively stable since then.
3. SHS: The SHS exhibits the most volatile trend, with sharp ups and downs. It had a period of high success in the early 2000s but has been declining since then.


"""

top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data=data[data['Party'].isin(top_parties)]
# Now plot the filtered data
plt.figure(figsize=(12, 6))
sns.countplot(x='Party', hue='Candidate_Type', data=filtered_data, palette="Set2")
plt.title('Party Representation by Candidate Type')
plt.tight_layout()
plt.show()

"""This graph illustrates that the majority of candidates from each party in this dataset are likely of the general category."""

top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data=data[data['Party'].isin(top_parties)]
plt.figure(figsize=(10, 6))
sns.scatterplot(data=filtered_data, x='Age', y='Vote_Share_Percentage', hue='Party', alpha=0.6)
plt.title('Scatter Plot of Vote Share Percentage vs Age by Party')
plt.xlabel('Age')
plt.ylabel('Vote Share Percentage')
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')
plt.show()

"""There is no clear trend in the data, but some parties, like the INC, seem to have a higher vote share percentage among voters who belong in to the 40-50 age group."""

top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data=data[data['Party'].isin(top_parties)]
plt.figure(figsize=(10, 6))
#colour of bars should be yellow
sns.countplot(data=filtered_data , x='Party', order=filtered_data['Party'].value_counts().index, palette='YlOrBr')
plt.title('Candidates by Party')
plt.xlabel('Party')
plt.ylabel('Number of Candidates')
plt.show()

"""The bar chart shows the number of candidates by party. The INC has the most candidates, followed by IND, SHS, BJP, and NCP."""

top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data = data[data['Party'].isin(top_parties)]
plt.figure(figsize=(10, 6))
# Add color to the regression line using line_kws
sns.regplot(data=filtered_data, x='Age', y='Margin_Percentage', scatter_kws={'alpha': 0.3}, line_kws={'color': 'green'})
plt.title('Regression Plot of Margin Percentage vs Age')
plt.xlabel('Age')
plt.ylabel('Margin Percentage')
plt.show()

"""The regression plot shows a weak negative correlation between margin percentage and age. This means that as age increases, margin percentage tends to decrease slightly. However, the relationship is not very strong, and there is a lot of variability in the data.

"""

#Pair Plot: Relationships among Votes, Vote_Share_Percentage, Margin, Margin_Percentage
top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data=data[data['Party'].isin(top_parties)]
sns.pairplot(filtered_data, vars=['Votes', 'Vote_Share_Percentage', 'Margin', 'Margin_Percentage'], hue='Party', corner=True)
plt.suptitle('Pair Plot of Key Election Metrics', y=1.02)
plt.show()

"""-There is a positive correlation between votes and vote share percentage, margin, and margin percentage. This means that as the number of votes increases, so do the other metrics.

-There is a positive correlation between vote share percentage and margin and margin percentage. This means that as the vote share percentage increases, so do the other metrics.

-There is a positive correlation between margin and margin percentage. This means that as the margin increases, so does the margin percentage.
"""

top_parties = data['Party'].value_counts('Votes').index[:5]
filtered_data = data[data['Party'].isin(top_parties)]
sns.jointplot(data=filtered_data,x='Votes',y='Margin',kind='reg',)

plt.suptitle('Joint Plot of Votes vs Margin', y=1.02)
plt.show()

"""The plot shows that the distribution of both votes and margin is right-skewed, meaning that most candidates have a lower number of votes and a smaller margin of victory, while a few candidates have a very high number of votes and a larger margin of victory."""