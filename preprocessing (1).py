# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dFnlumhFG6B5PM66qWfowB5TagkTzWTR

### Reading Data
"""

import pandas as pd
import numpy as np

df=pd.read_csv("/content/Maharastra_Election.csv")
df

print("Total rows:", len(df))

df.isnull().sum()

"""### Dropping Columns"""

dropcol=['State_Name','Assembly_No','month','District_Name','Sub_Region','DelimID','Poll_No','N_Cand','Deposit_Lost','ENOP','pid','Party_Type_TCPD','Party_ID','last_poll',
         'Contested','Last_Party','Last_Party_ID','Last_Constituency_Name','Candidate','Same_Constituency','Same_Party','No_Terms','Turncoat',
         'Turnout_Percentage','Recontest','MyNeta_education','TCPD_Prof_Main','TCPD_Prof_Main_Desc','TCPD_Prof_Second','TCPD_Prof_Second_Desc',
         'Election_Type','Electors','Valid_Votes']
df1 = df.drop(dropcol, axis=1)
df1.head()

print("Total rows:", len(df1))

"""### Removing rows where postion is greater than 3"""

df2 = df1[df1.Position <= 3].copy()
df2
#creates a copy of the dataframe where positions are lesser or equal to 3
#After removing rows where the position is greater than 3, we are left with 11,172 rows.

df2.isna().sum()

"""Dropping Rows"""

df3=df2.dropna(thresh=12)
df3.head()

df3.isna().sum()

"""### Filling the Null values in the age column"""

#filling null values in the Age column
meanage = round(df3['Age'].mean(), 1) #48.6 #round off to 1 decimal point
df3['Age']=df['Age'].fillna(meanage)
df3

df3.isna().sum()

"""### Filling Missing Values in the Candidate Type Column(Using backward/forward filling)"""

print(df3['Candidate_Type'].unique())

#we are performing the following checks to perform the replacement of general to gen
# Standardize values in "Candidate_Type" by stripping whitespace and converting to lowercase
df3['Candidate_Type'] = df3['Candidate_Type'].str.strip().str.lower()

# Replace "general" with "gen" (now that "general" should be standardized)
df3['Candidate_Type'] = df3['Candidate_Type'].replace('general', 'gen')

# Verify the replacement
print(df3['Candidate_Type'].unique())

df3['Candidate_Type'].fillna(method='ffill', inplace=True)
#backward fill won't work since there are no values in the forward cell
df3.tail(10)

df3.isna().sum()

"""### Replacing male as M"""

print(df3['Sex'].unique())

#we are perofrming the following checks to perform the replacement of general to gen
# Standardize values in "Candidate_Type" by stripping whitespace and converting to lowercase
df3['Sex'] = df3['Sex'].str.strip().str.lower()

# Replace "general" with "gen" (now that "general" should be standardized)
df3['Sex'] = df3['Sex'].replace('male', 'm')

# Verify the replacement
print(df3['Sex'].unique())

"""### downloading the dataset as a csv file

"""

#downloading the dataset as a csv file
final=df3.to_csv('preprocessed_election.csv', index=False)